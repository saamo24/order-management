version: '3.8'

services:
  # FastAPI Application (Development)
  app:
    build: .
    container_name: order_management_app_dev
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/order_management?authSource=admin
      - DATABASE_NAME=order_management
      - DEBUG=true
      - HOST=0.0.0.0
      - PORT=8000
    volumes:
      - .:/app  # Mount source code for development
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - order_management_network
    command: ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: order_management_mongodb_dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: order_management
    volumes:
      - mongodb_data_dev:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - order_management_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # MongoDB Admin Interface
  mongo-express:
    image: mongo-express:1.0.0
    container_name: order_management_mongo_express_dev
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - order_management_network

volumes:
  mongodb_data_dev:

networks:
  order_management_network:
    driver: bridge
